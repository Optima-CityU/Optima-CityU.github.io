@article{9796dcca992f40e2b9280f602efcfbf8,
 abstract = {In the realm of evolutionary multiobjective optimization, the hypervolume indicator serves as a crucial metric for assessing the quality of solution sets. Due to the high costs in hypervolume computation, hypervolume-based optimization algorithms always meet the challenge of finding a certain number of points in a given point set to maximize the hypervolume indicator, especially when there are many objectives. In response, the greedy decremental algorithm for hypervolume subset selection problem (gHSSD) has emerged as a noteworthy alternative. This paper introduces a general algorithm for gHSSD, applicable in any dimensionality above two. The proposed algorithm leverages a space partition tree and incorporates a once-build-multiple-use strategy, effectively reducing time complexity. We prove that the proposed algorithm has a time complexity of O((n-k+n)nd-12logn) where n is the number of points, k is the number of points to be reserved, and d the dimensionality. Theoretically, this complexity is competitive with the current best algorithms for d=3,4 and better than them for all 5≤d≤7. To validate our algorithm, we have conducted extensive tests on various random point sets and multiobjective optimization benchmarks. Experimental results suggest that our implementation is more efficient than or competitive with state-of-the-art algorithms on many instances as n increases for d=3,4. © 2024 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.},
 author = {Jingda Deng and Jianyong Sun and Qingfu Zhang and Hui Li},
 day = {14},
 doi = {10.1109/TEVC.2024.3400801},
 issn = {1089-778X},
 journal = {IEEE Transactions on Evolutionary Computation},
 keywords = {Complexity analysis, Greedy hypervolume subset selection, Hypervolume indicator, Multiobjective optimization, Space partition method},
 language = {English},
 month = {May},
 publisher = {Institute of Electrical and Electronics Engineers},
 title = {Efficient Greedy Decremental Hypervolume Subset Selection Using Space Partition Tree},
 year = {2024}
}
